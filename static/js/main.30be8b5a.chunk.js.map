{"version":3,"sources":["context.js","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/TextInputGroup.jsx","components/contacts/AddContact.js","components/contacts/EditContact.jsx","components/layout/Header.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","components/test/Test.js","provider.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","Contact","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onShowClick","setState","showContactInfo","state","onDeleteClick","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","id","dispatch","wrap","_context","prev","next","axios","delete","concat","type","payload","t0","stop","_x","_x2","apply","arguments","_this2","_this$props$contact","props","contact","name","email","phone","react_default","createElement","context","Consumer","value","className","style","cursor","onClick","color","float","bind","react_router_dom","to","marginRight","Component","Contacts","contacts","Fragment","map","contacts_Contact","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","res","preventDefault","abrupt","post","sent","data","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","get","Header","branding","href","About","NotFound","Test","title","completed","fetch","then","response","json","reducer","action","objectSpread","filter","toConsumableArray","Provider","_Component","_getPrototypeOf2","_len","length","args","Array","_key","inherits","createClass","_componentDidMount","children","App","provider_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30be8b5a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../../context\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showContactInfo: false\r\n    };\r\n  }\r\n\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id })\r\n    } catch(e) {\r\n\r\n    }    \r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact; // DESTRUCTURING\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i style={{ cursor: \"pointer\" }} onClick={this.onShowClick}>\r\n                  +\r\n                </i>\r\n                <p\r\n                  style={{ color: \"red\", float: \"right\", cursor: \"pointer\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                >\r\n                  x\r\n                </p>\r\n                <Link \r\n                  to={`/contact/edit/${id}`} \r\n                  style={{ color: \"red\", float: \"right\", cursor: \"pointer\", marginRight: \"5px\"  }}\r\n                >\r\n                  e\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n\r\n  //TIPIFICANDO OS PROPS\r\n  static propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport Context from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">Contact List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input \r\n                type={type} \r\n                value={value} \r\n                name={name} \r\n                className={classnames('form-control form-contro-lg',{\r\n                    'is-invalid': error\r\n                })}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n            />\r\n            {error && \r\n                <div className=\"invalid-feedback\">{error}</div>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,    \r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport Context from \"../../context\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      errors: {}\r\n    };\r\n\r\n    const res = await axios.post(`https://jsonplaceholder.typicode.com/users/`, newContact);\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\"\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    name=\"name\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    name=\"phone\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport Context from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    this.setState({\r\n      name: res.data.name,\r\n      email: res.data.email,\r\n      phone: res.data.phone\r\n    });\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Context.Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    value={name}\r\n                    name=\"name\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the name\"\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"text\"\r\n                    value={email}\r\n                    name=\"email\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the email\"\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    value={phone}\r\n                    name=\"phone\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Enter the phone\"\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Context.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fas-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fas-add\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fas-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\n//TIPIFICANDO\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst About = props => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About page</h1>\r\n      <p>Eita {props.match.params.id}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Não encontrada</h1>\r\n      <p>Pagina não existe</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    completed: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          completed: data.completed ? \"True\" : \"False\"\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, completed } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <p>{title}</p>\r\n        <p>{completed}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport Context from \"./context\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\n\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Test from \"./components/test/Test\";\r\n\r\nimport { Provider } from \"./provider\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"/about/:id\" component={About} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}